// DO NOT EDIT: generated by github.com/tim-online/go-afas-profit-rest/generate

package afas

import "encoding/json"

type FiEntryParInsertRequest struct {
	FiEntryParService
	ConnectorInsertRequest
}

type FiEntryParInsertResponseBody struct {
	*ConnectorInsertResponseBody

	UniID string `json:"Unid"`
	EnNo  string `json:"EnNo"`
}

// wraps the root object of the request
type FiEntryParInsertRequestBody struct {
	FiEntryPar
}

func (f *FiEntryParInsertRequest) ResponseBody() *FiEntryParInsertResponseBody {
	type alias FiEntryParInsertResponseBody

	rb := FiEntryParInsertResponseBody{
		ConnectorInsertResponseBody: f.ConnectorInsertRequest.ResponseBody(),
	}

	wrapper := struct {
		FiEntryParInsertResponseBody alias `json:"FiEntryPar"`
	}{
		FiEntryParInsertResponseBody: alias(rb),
	}

	json.Unmarshal(f.ConnectorInsertRequest.ResponseBody().Results, &wrapper)
	rb = FiEntryParInsertResponseBody(wrapper.FiEntryParInsertResponseBody)
	return &rb
}

// Wrap extra object around root type:
// {
//   "FiEntryPar": {}
// }
func (f FiEntryParInsertRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		FiEntryPar FiEntryPar `json:"FiEntryPar"`
	}{f.FiEntryPar})
}

func (r *FiEntryParInsertRequest) RequestBody() *FiEntryParInsertRequestBody {
	// convert ConnectorInsertRequest interface to real type
	body, _ := r.ConnectorInsertRequest.RequestBody().(*FiEntryParInsertRequestBody)
	return body
}

func (s *FiEntryParService) NewInsertRequest() FiEntryParInsertRequest {
	r := s.api.Connector.NewInsertRequest()

	// set custom request body on creation
	r.SetRequestBody(&FiEntryParInsertRequestBody{})

	r.URLParams().ConnectorID = "FiEntries"
	return FiEntryParInsertRequest{ConnectorInsertRequest: r}
}
