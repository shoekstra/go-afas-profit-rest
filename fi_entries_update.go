// DO NOT EDIT: generated by github.com/tim-online/go-afas-profit-rest/generate

package afas

import "encoding/json"

type FiEntryParUpdateRequest struct {
	FiEntryParService
	ConnectorUpdateRequest
}

type FiEntryParUpdateResponseBody struct {
	ConnectorUpdateResponseBody

	Rows []FiEntryPar `json:"rows"`
}

type FiEntryParUpdateRequestBody struct {
	FiEntryPar `json:"FiEntryPar"`
}

// Wrap extra object around root type:
// {
//   "root": {}
// }
func (f FiEntryParUpdateRequestBody) MarshalJSON() ([]byte, error) {
	type alias FiEntryParUpdateRequestBody
	wrapper := struct {
		FiEntryParUpdateRequestBody alias `json:"FiEntryPar"`
	}{FiEntryParUpdateRequestBody: alias(f)}
	return json.Marshal(wrapper)
}

func (r *FiEntryParUpdateRequest) RequestBody() *FiEntryParUpdateRequestBody {
	if body, ok := r.ConnectorUpdateRequest.RequestBody().(*FiEntryParUpdateRequestBody); ok {
		return body
	}

	body := &FiEntryParUpdateRequestBody{}
	r.ConnectorUpdateRequest.SetRequestBody(body)
	return body
}

// func (r *FiEntryParUpdateRequest) ResponseBody() *FiEntryParUpdateResponseBody {
// 	rb := r.ConnectorUpdateRequest.ResponseBody()
// 	rows := rb.Rows.(*[]FiEntryPar)
// 	return &FiEntryParUpdateResponseBody{
// 		ConnectorUpdateResponseBody: *rb,
// 		Rows: *rows,
// 	}
// }

func (s *FiEntryParService) NewUpdateRequest() FiEntryParUpdateRequest {
	r := s.api.Connector.NewUpdateRequest()
	r.URLParams().ConnectorID = "FiEntryPar"
	return FiEntryParUpdateRequest{ConnectorUpdateRequest: r}
}
