// DO NOT EDIT: generated by github.com/tim-online/go-afas-profit-rest/generate

package afas

type {{.Name}}InsertRequest struct {
	{{.Name}}Service
	ConnectorInsertRequest
}

type {{.Name}}InsertResponseBody struct {
	ConnectorInsertResponseBody

	Rows []{{.Name}} `json:"rows"`
}

func (r *{{.Name}}InsertRequest) RequestBody() *{{.Name}} {
	if body, ok := r.ConnectorInsertRequest.RequestBody().(*{{.Name}}); ok {
		return body
	}

	body := &{{.Name}}{}
	r.ConnectorInsertRequest.SetRequestBody(body)
	return body
}

// func (r *{{.Name}}InsertRequest) ResponseBody() *{{.Name}}InsertResponseBody {
// 	rb := r.ConnectorInsertRequest.ResponseBody()
// 	rows := rb.Rows.(*[]{{.Name}})
// 	return &{{.Name}}InsertResponseBody{
// 		ConnectorInsertResponseBody: *rb,
// 		Rows: *rows,
// 	}
// }

func (s *{{.Name}}Service) NewInsertRequest() {{.Name}}InsertRequest {
	r := s.api.Connector.NewInsertRequest()
	r.URLParams().ConnectorID = "{{.Name}}"
	return {{.Name}}InsertRequest{ConnectorInsertRequest: r}
}

// vim: ft=gotexttmpl
