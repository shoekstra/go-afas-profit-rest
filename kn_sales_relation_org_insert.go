// DO NOT EDIT: generated by github.com/tim-online/go-afas-profit-rest/generate

package afas

import "encoding/json"

type KnSalesRelationOrgInsertRequest struct {
	KnSalesRelationOrgService
	ConnectorInsertRequest
}

type KnSalesRelationOrgInsertResponseBody struct {
	*ConnectorInsertResponseBody

	UniID string `json:"Unid"`
	EnNo  string `json:"EnNo"`
}

// wraps the root object of the request
type KnSalesRelationOrgInsertRequestBody struct {
	KnSalesRelationOrg
}

func (k *KnSalesRelationOrgInsertRequest) ResponseBody() *KnSalesRelationOrgInsertResponseBody {
	type alias KnSalesRelationOrgInsertResponseBody

	rb := KnSalesRelationOrgInsertResponseBody{
		ConnectorInsertResponseBody: k.ConnectorInsertRequest.ResponseBody(),
	}

	wrapper := struct {
		KnSalesRelationOrgInsertResponseBody alias `json:"KnSalesRelationOrg"`
	}{
		KnSalesRelationOrgInsertResponseBody: alias(rb),
	}

	json.Unmarshal(k.ConnectorInsertRequest.ResponseBody().Results, &wrapper)
	rb = KnSalesRelationOrgInsertResponseBody(wrapper.KnSalesRelationOrgInsertResponseBody)
	return &rb
}

// Wrap extra object around root type:
// {
//   "KnSalesRelationOrg": {}
// }
func (k KnSalesRelationOrgInsertRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		KnSalesRelationOrg KnSalesRelationOrg `json:"KnSalesRelationOrg"`
	}{k.KnSalesRelationOrg})
}

func (r *KnSalesRelationOrgInsertRequest) RequestBody() *KnSalesRelationOrgInsertRequestBody {
	// convert ConnectorInsertRequest interface to real type
	body, _ := r.ConnectorInsertRequest.RequestBody().(*KnSalesRelationOrgInsertRequestBody)
	return body
}

func (s *KnSalesRelationOrgService) NewInsertRequest() KnSalesRelationOrgInsertRequest {
	r := s.api.Connector.NewInsertRequest()

	// set custom request body on creation
	r.SetRequestBody(&KnSalesRelationOrgInsertRequestBody{})

	r.URLParams().ConnectorID = "KnSalesRelationOrg"
	return KnSalesRelationOrgInsertRequest{ConnectorInsertRequest: r}
}
